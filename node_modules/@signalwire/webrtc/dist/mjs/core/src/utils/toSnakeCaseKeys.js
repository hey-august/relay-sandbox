import { fromCamelToSnakeCase } from './common';
export const toSnakeCaseKeys = (obj, transform = (value) => value, result = {}) => {
    if (Array.isArray(obj)) {
        result = obj.map((item, index) => {
            if (typeof item === 'object') {
                return toSnakeCaseKeys(item, transform, result[index]);
            }
            return item;
        });
    }
    else {
        Object.keys(obj).forEach((key) => {
            const newKey = fromCamelToSnakeCase(key);
            // Both 'object's and arrays will enter this branch
            if (obj[key] && typeof obj[key] === 'object') {
                result[newKey] = toSnakeCaseKeys(obj[key], transform, result[newKey]);
            }
            else {
                result[newKey] = transform(obj[key]);
            }
        });
    }
    return result;
};
//# sourceMappingURL=toSnakeCaseKeys.js.map