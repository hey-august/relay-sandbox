import { createAction } from './toolkit';
export const initAction = createAction('swSdk/init');
export const destroyAction = createAction('swSdk/destroy');
/**
 * Used to trigger a `signalwire.reauthenticate`
 */
export const reauthAction = createAction('swSdk/reauth');
export const authErrorAction = createAction('auth/error');
export const authSuccessAction = createAction('auth/success');
export const authExpiringAction = createAction('auth/expiring');
export const socketMessageAction = createAction('socket/message');
export const sessionDisconnectedAction = createAction('session.disconnected');
export const sessionReconnectingAction = createAction('session.reconnecting');
export const sessionForceCloseAction = createAction('session.forceClose');
const formatCustomSagaAction = (id, action) => {
    return `${action.type}/${id}`;
};
export const makeCustomSagaAction = (id, action) => {
    return Object.assign(Object.assign({}, action), { type: formatCustomSagaAction(id, action) });
};
export const getCustomSagaActionType = (id, action) => {
    return formatCustomSagaAction(id, action);
};
export { createAction };
//# sourceMappingURL=actions.js.map