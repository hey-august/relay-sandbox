import { connect, extendComponent, } from '..';
import { BasePubSubConsumer } from '../pubSub';
import { PRODUCT_PREFIX_CHAT } from '../utils/constants';
import * as chatMethods from './methods';
import { chatWorker } from './workers/chatWorker';
export class BaseChatConsumer extends BasePubSubConsumer {
    constructor(options) {
        super(options);
        this.subscribeMethod = `${PRODUCT_PREFIX_CHAT}.subscribe`;
    }
    initWorker() {
        this.runWorker('chat', { worker: chatWorker });
    }
}
export const BaseChatAPI = extendComponent(BaseChatConsumer, {
    publish: chatMethods.publish,
    getMembers: chatMethods.getMembers,
    getMessages: chatMethods.getMessages,
    setMemberState: chatMethods.setMemberState,
    getMemberState: chatMethods.getMemberState,
});
export const createBaseChatObject = (params) => {
    const chat = connect({
        store: params.store,
        Component: BaseChatAPI,
    })(params);
    return chat;
};
//# sourceMappingURL=BaseChat.js.map