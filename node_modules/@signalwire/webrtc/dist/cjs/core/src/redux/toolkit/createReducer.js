"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createReducer = void 0;
const mapBuilders_1 = require("./mapBuilders");
function isStateFunction(x) {
    return typeof x === 'function';
}
function createReducer(initialState, mapOrBuilderCallback, actionMatchers = [], defaultCaseReducer) {
    let [actionsMap, finalActionMatchers, finalDefaultCaseReducer] = typeof mapOrBuilderCallback === 'function'
        ? (0, mapBuilders_1.executeReducerBuilderCallback)(mapOrBuilderCallback)
        : [mapOrBuilderCallback, actionMatchers, defaultCaseReducer];
    // Ensure the initial state gets frozen either way
    let getInitialState;
    if (isStateFunction(initialState)) {
        getInitialState = () => initialState();
    }
    else {
        getInitialState = () => initialState;
    }
    function reducer(state = getInitialState(), action) {
        let caseReducers = [
            actionsMap[action.type],
            ...finalActionMatchers
                .filter(({ matcher }) => matcher(action))
                .map(({ reducer }) => reducer),
        ];
        if (caseReducers.filter((cr) => !!cr).length === 0) {
            caseReducers = [finalDefaultCaseReducer];
        }
        return caseReducers.reduce((previousState, caseReducer) => {
            if (caseReducer) {
                return caseReducer(previousState, action);
            }
            return previousState;
        }, state);
    }
    reducer.getInitialState = getInitialState;
    return reducer;
}
exports.createReducer = createReducer;
//# sourceMappingURL=createReducer.js.map