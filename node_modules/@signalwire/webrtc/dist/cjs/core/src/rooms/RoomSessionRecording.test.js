"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const testUtils_1 = require("../testUtils");
const RoomSessionRecording_1 = require("./RoomSessionRecording");
describe('RoomSessionRecording', () => {
    describe('createRoomSessionRecordingObject', () => {
        let instance;
        beforeEach(() => {
            instance = (0, RoomSessionRecording_1.createRoomSessionRecordingObject)({
                store: (0, testUtils_1.configureJestStore)(),
                payload: {
                    // @ts-expect-error
                    recording: {
                        id: 'c22d7223-5a01-49fe-8da0-46bec8e75e32',
                    },
                    room_session_id: 'room-session-id',
                },
            });
            // @ts-expect-error
            instance.execute = jest.fn();
        });
        it('should control an active recording', () => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
            const baseExecuteParams = {
                method: '',
                params: {
                    room_session_id: 'room-session-id',
                    recording_id: 'c22d7223-5a01-49fe-8da0-46bec8e75e32',
                },
            };
            yield instance.pause();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.recording.pause' }));
            yield instance.resume();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.recording.resume' }));
            yield instance.stop();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.recording.stop' }));
        }));
    });
});
//# sourceMappingURL=RoomSessionRecording.test.js.map