"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const testUtils_1 = require("../testUtils");
const RoomSessionPlayback_1 = require("./RoomSessionPlayback");
describe('RoomSessionPlayback', () => {
    describe('createRoomSessionPlaybackObject', () => {
        let instance;
        beforeEach(() => {
            instance = (0, RoomSessionPlayback_1.createRoomSessionPlaybackObject)({
                store: (0, testUtils_1.configureJestStore)(),
                payload: {
                    //@ts-expect-error
                    playback: {
                        id: 'c22d7223-5a01-49fe-8da0-46bec8e75e32',
                    },
                    room_session_id: 'room-session-id',
                },
            });
            // @ts-expect-error
            instance.execute = jest.fn();
        });
        it('should control an active playback', () => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
            const baseExecuteParams = {
                method: '',
                params: {
                    room_session_id: 'room-session-id',
                    playback_id: 'c22d7223-5a01-49fe-8da0-46bec8e75e32',
                },
            };
            yield instance.pause();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.playback.pause' }));
            yield instance.resume();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.playback.resume' }));
            yield instance.stop();
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith(Object.assign(Object.assign({}, baseExecuteParams), { method: 'video.playback.stop' }));
            yield instance.setVolume(30);
            // @ts-expect-error
            expect(instance.execute).toHaveBeenLastCalledWith({
                method: 'video.playback.set_volume',
                params: {
                    room_session_id: 'room-session-id',
                    playback_id: 'c22d7223-5a01-49fe-8da0-46bec8e75e32',
                    volume: 30,
                },
            });
        }));
    });
});
//# sourceMappingURL=RoomSessionPlayback.test.js.map