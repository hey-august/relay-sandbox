"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toInternalEventName = void 0;
const common_1 = require("./common");
const constants_1 = require("./constants");
const toInternalEventName = ({ event, namespace, }) => {
    // TODO: improve types of getNamespacedEvent and fromCamelToSnakeCase
    if (typeof event === 'string') {
        // other transforms here..
        event = getNamespacedEvent({
            event,
            namespace,
        });
        event = (0, common_1.fromCamelToSnakeCase)(event);
    }
    return event;
};
exports.toInternalEventName = toInternalEventName;
const getNamespacedEvent = ({ namespace, event, }) => {
    /**
     * If getNamespacedEvent is called with the `namespace` already
     * present in the `event` or with a falsy namespace we'll return it
     * as is
     */
    if (!namespace || event.startsWith(namespace)) {
        return event;
    }
    return `${namespace}${constants_1.EVENT_NAMESPACE_DIVIDER}${event}`;
};
//# sourceMappingURL=toInternalEventName.js.map