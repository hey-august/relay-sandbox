"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VertoResult = exports.VertoPong = exports.VertoSubscribe = exports.VertoAnswer = exports.VertoInfo = exports.VertoModify = exports.VertoAttach = exports.VertoBye = exports.VertoInvite = void 0;
const tslib_1 = require("tslib");
const helpers_1 = require("./helpers");
const tmpMap = {
    id: 'callID',
    destinationNumber: 'destination_number',
    remoteCallerName: 'remote_caller_id_name',
    remoteCallerNumber: 'remote_caller_id_number',
    callerName: 'caller_id_name',
    callerNumber: 'caller_id_number',
};
/**
 * Translate SDK fields into verto variables
 */
const filterVertoParams = (params) => {
    if (params.hasOwnProperty('dialogParams')) {
        // prettier-ignore
        const _a = params.dialogParams, { remoteSdp, localStream, remoteStream } = _a, dialogParams = tslib_1.__rest(_a, ["remoteSdp", "localStream", "remoteStream"]);
        for (const key in tmpMap) {
            if (key && dialogParams.hasOwnProperty(key)) {
                // @ts-ignore
                dialogParams[tmpMap[key]] = dialogParams[key];
                delete dialogParams[key];
            }
        }
        params.dialogParams = dialogParams;
    }
    return params;
};
const buildVertoRPCMessage = (method) => {
    return (params = {}) => {
        return (0, helpers_1.makeRPCRequest)({
            method,
            params: filterVertoParams(params),
        });
    };
};
exports.VertoInvite = buildVertoRPCMessage('verto.invite');
exports.VertoBye = buildVertoRPCMessage('verto.bye');
exports.VertoAttach = buildVertoRPCMessage('verto.attach');
exports.VertoModify = buildVertoRPCMessage('verto.modify');
exports.VertoInfo = buildVertoRPCMessage('verto.info');
exports.VertoAnswer = buildVertoRPCMessage('verto.answer');
exports.VertoSubscribe = buildVertoRPCMessage('verto.subscribe');
exports.VertoPong = buildVertoRPCMessage('verto.pong');
const VertoResult = (id, method) => {
    return (0, helpers_1.makeRPCResponse)({
        id,
        result: {
            method,
        },
    });
};
exports.VertoResult = VertoResult;
//# sourceMappingURL=VertoMessages.js.map