"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.chatWorker = void 0;
const index_1 = require("../../index");
const chatWorker = function* (options) {
    (0, index_1.getLogger)().trace('chatWorker started');
    const { instance: client, channels: { swEventChannel }, } = options;
    function* worker(action) {
        const { type, payload } = action;
        switch (type) {
            case 'chat.channel.message': {
                const { channel, message } = payload;
                const externalJSON = (0, index_1.toExternalJSON)(Object.assign(Object.assign({}, message), { channel }));
                const chatMessage = new index_1.ChatMessage(externalJSON);
                client.emit('message', chatMessage);
                break;
            }
            case 'chat.member.joined':
            case 'chat.member.updated':
            case 'chat.member.left': {
                const { member } = payload;
                const externalJSON = (0, index_1.toExternalJSON)(member);
                const chatMessage = new index_1.ChatMember(externalJSON);
                const event = (0, index_1.stripNamespacePrefix)(type);
                client.emit(event, chatMessage);
                break;
            }
            default:
                (0, index_1.getLogger)().warn(`Unknown chat event: "${type}"`);
                break;
        }
    }
    const isChatEvent = (action) => action.type.startsWith('chat.');
    while (true) {
        const action = yield index_1.sagaEffects.take(swEventChannel, isChatEvent);
        yield index_1.sagaEffects.fork(worker, action);
    }
    (0, index_1.getLogger)().trace('chatWorker ended');
};
exports.chatWorker = chatWorker;
//# sourceMappingURL=chatWorker.js.map