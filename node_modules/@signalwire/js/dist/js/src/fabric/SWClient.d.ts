interface SWClientOptions {
    httpHost?: string;
    accessToken: string;
    rootElement?: HTMLElement;
}
interface RegisterDeviceParams {
    deviceType: 'iOS' | 'Android' | 'Desktop';
    deviceToken: string;
}
export declare class SWClient {
    options: SWClientOptions;
    private httpClient;
    constructor(options: SWClientOptions);
    get httpHost(): string;
    getAddresses(): Promise<{
        addresses: any;
        nextPage: () => Promise<any | undefined>;
        prevPage: () => Promise<any | undefined>;
    }>;
    registerDevice({ deviceType, deviceToken }: RegisterDeviceParams): Promise<any>;
    unregisterDevice({ id }: {
        id: string;
    }): Promise<{
        body: any;
    }>;
}
export {};
//# sourceMappingURL=SWClient.d.ts.map